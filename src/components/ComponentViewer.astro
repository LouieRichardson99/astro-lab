<component-viewer>
  <div class="component-viewer">
    <div class="component-wrapper">
      <iframe
        title="astrolab-preview-iframe"
        src="/_astrolab/preview"
        allow="clipboard-write"
        allowfullscreen></iframe>
    </div>
  </div>
</component-viewer>

<style lang="scss">
  .component-viewer {
    width: 100%;
    height: calc(100vh - var(--control-bar-height));
    overflow: scroll;

    &.grid {
      background-size: 40px 40px;
      background-image:
        linear-gradient(to right, var(--border-color) 1px, transparent 1px),
        linear-gradient(to bottom, var(--border-color) 1px, transparent 1px);
      background-position: -1px -1px;
    }
  }

  .component-wrapper {
    position: relative;
    padding: 2.5rem;
    z-index: 0;
    height: 100%;
  }

  iframe {
    display: block;
    background-color: hsl(0, 0%, 100%);
    width: 100%;
    height: 100%;
    border: none;
  }
</style>

<script>
  class ComponentViewer extends HTMLElement {
    componentViewer: HTMLElement | null = null;
    componentWrapper: HTMLDivElement | null = null;
    iframe: HTMLIFrameElement | null = null;
    zoom: number = 1;

    connectedCallback() {
      this.componentViewer = this.querySelector('.component-viewer');
      this.componentWrapper = this.querySelector('.component-wrapper');
      this.iframe = this.querySelector('iframe');

      document.addEventListener('component-updated', () => {
        this.iframe?.contentWindow?.location.reload();
      });

      document.addEventListener('toggle-grid', () => {
        this.componentViewer?.classList.toggle('grid');
      });

      document.addEventListener('zoom-in', () => {
        this.zoom += 0.1;
        this.#applyZoom();
      });

      document.addEventListener('zoom-out', () => {
        this.zoom -= 0.1;
        this.#applyZoom();
      });

      document.addEventListener('zoom-reset', () => {
        this.zoom = 1;
        this.#applyZoom();
      });
    }

    #applyZoom() {
      const doc = this.iframe?.contentDocument;

      if (doc) {
        doc.documentElement.querySelector('body')!.style.transform =
          `scale(${Math.max(0.2, this.zoom)})`;
        doc.documentElement.querySelector('body')!.style.width =
          `${100 / Math.max(0.2, this.zoom)}%`;
        doc.documentElement.querySelector('body')!.style.height =
          `${100 / Math.max(0.2, this.zoom)}%`;
      }
    }
  }

  customElements.define('component-viewer', ComponentViewer);
</script>

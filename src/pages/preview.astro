---
export const prerender = false;

import { getComponentData } from '../services/component-data';
import { stylesheets } from 'virtual:astrolab-stylesheets';
import { scripts } from 'virtual:astrolab-scripts';
import ErrorHandler from '../components/ErrorHandler.astro';
import prettyConsoleLog from '../utils/prettyConsoleLog';
import { componentModules } from 'virtual:astrolab-component-modules';

const data = await getComponentData(Astro);

const props = data?.props || {};
const slots = Object.entries(data?.slots || {});

const Component = await componentModules[data?.component?.name || '']();

if (!Component) {
  prettyConsoleLog(`Component not found: ${data?.component?.name}`, 'error');
}
---

<!doctype html>
<html lang="en">
  <head>
    <title>Component Preview</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    {stylesheets.map((href) => <link rel="stylesheet" href={href} />)}
  </head>
  <body>
    <ErrorHandler>
      <Component {...props}>
        {
          slots.map(([name, value]) => (
            <Fragment name={name} set:html={value} />
          ))
        }
      </Component>
      <div slot="error">
        {(error: Error) => <p class="error-message">{error.message}</p>}
      </div>
    </ErrorHandler>

    {scripts.map((src) => <script src={src} />)}
  </body>
</html>

<style lang="scss">
  body {
    margin: 0;
    padding: 15px;
    box-sizing: border-box;
    transform-origin: left top;
    transition: transform 200ms ease;
    background-color: hsl(0, 0%, 100%);

    &.grid-lines {
      background-size: 40px 40px;
      background-image:
        linear-gradient(to right, hsl(0, 0%, 90%) 1px, transparent 1px),
        linear-gradient(to bottom, hsl(0, 0%, 90%) 1px, transparent 1px);
      background-position: -1px -1px;
    }
  }

  .error-message {
    font-family: 'system-ui', sans-serif;
    font-size: 16px;
    font-weight: 300;
    color: hsl(0, 80%, 50%);
    margin: 0;
  }

  :global(astro-dev-toolbar) {
    display: none;
  }
</style>

<script>
  document.querySelectorAll('a[href]').forEach((link) => {
    link.setAttribute('target', '_blank'); // Prevent navigation in the iframe
    link.setAttribute('rel', 'noopener noreferrer');
  });
</script>
